server:
  port: 9994

spring:
  application:
    name: gateway
  cloud:
    #网关配置
    gateway:
      #服务发现配置
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
          lower-case-service-id: true #开启服务id小写字母匹配
      #全局跨域配置
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: "http://localhost:9994/**"  #允许源
            allowed-headers: "*"                         #允许头
            allow-credentials: true                      #允许凭证
            allowed-methods:                             #允许方法
              - GET
              - POST
              - DELETE
              - PUT
              - OPTION
      #客户端配置
      httpclient:
        #配置连接超时
        connect-timeout: 1000
        #配置响应超时
        response-timeout: 2s
      #路由配置
      routes:
        - id: system_role   #路由的id
          uri: lb://system  #路由的地址
          predicates:       #路由匹配规则
            - Path=/users/**
            - BlackToken=abcd
          filters:         #过滤器配置
            - MyToken=true
        - id: system_route_1
          uri: http://localhost:9991
          predicates:
            - Path=/error/**
        - id: system_route_2
          uri: http://localhost:9991
          predicates:
            - Path=/dept/**
          filters:
            - name: CircuitBreaker
              args:
                name: cirA
                fallbackUri: forward:/error/info
                statusCodes:
                  - 500
                  - 404
                  - "NOT_FOUND"
#        - id: system_route_3
#          uri: http://localhost:9991
#          predicates:
#            - Header=token,123456
#            - Path=/users/**
#        - id: home_route
#          uri: lb://home
#          predicates:
#            - Path=/tool/**
#        - id: weight_route_1
#          uri: http://localhost:9992
#          predicates:
#            - Weight=group1,2
#        - id: weight_route_2
#          uri: http://localhost:9993
#          predicates:
#            - Weight=group1,8
    #配置服务注册与发现
    consul:
      host: localhost
      port: 8500
      discovery:
        #配置服务名称
        service-name: ${spring.application.name}
        #配置服务实例id
        instance-id: ${spring.application.name}-${server.port}
        #是否注册服务
        register: true
        #使用ip地址注册
        prefer-ip-address: true
        #本服务ip
        ip-address: ${spring.cloud.client.ip-address}
        #本服务的port
        port: ${server.port}
        #每隔15秒检查服务的健康状态
        health-check-interval: 15s

resilience4j:
  circuitbreaker:
    instances:
      cirA:
        #注册健康检查
        registerHealthIndicator: true
        #滑动窗口的大小
        slidingWindowSize: 5
        #half-open执行请求数
        permittedNumberOfCallsInHalfOpenState: 2
        #滑动窗口的类型
        slidingWindowType: TIME_BASED
        #最小的调用数量,只有达到10次才会计算滑动窗口的失败率
        minimumNumberOfCalls: 5
        #open -> half-open的等待时间
        waitDurationInOpenState: 2s
        #失败率,当失败率达到百分之50,熔断开启(open)
        failureRateThreshold: 30
        #事件缓存大小
        eventConsumerBufferSize: 10